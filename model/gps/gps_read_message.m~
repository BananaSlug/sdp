function [msg] = gps_read_message(serial_obj)
% [str] = gps_read_message(serial_obj)
%
% Reads a message (CR/LF terminated) from a GPS device
% and returns it as a string.
%
% Arguments:
%   serial_obj: a serial object
%
% Returns:
%   a string containing a GPS message
%

if nargin < 1
    error('Missing argument ''serial_obj''')
end

USE_UBX = 1;


MAX_STRING_SIZE = 150;
if ~USE_UBX
    START_CHAR = '$';
    CHECK_CHAR  = '*';
    DELIM_CHAR = ',';
    LF_CHAR = char(10);
    CR_CHAR = char(13);
else
    START_CHAR = 181;
    START_CHAR2 = 98;
    LENGTH_POS = 5;
end


c = '';
str = '';
pos = 1;


while 1
    if ~USE_UBX
        c = fread(serial_obj,1,'char');
    
    % Look for start of string or skip
    
        if pos == 1 && c ~= START_CHAR
            continue;
        end
    else
        % UBX mode
        if pos == 1 && c ~= START_CHAR
            continue;
        elseif pos == 2 && c ~= START_CHAR2
            pos = 1;
            continue;
        elseif (pos == LENGTH_POS || pos == (LENGTH_POS + 1)) 
        end
    end
    
    
    % Convert 
    %if c ~= START_CHAR && c ~= STAR_CHAR && c ~= DELIM_CHAR && c ~= LF_CHAR && c ~= CR_CHAR
    %else
    %    val = sprintf('%d',c);
    %end
    str = [str c];
    pos = pos + 1;
    
      
    if c == LF_CHAR || pos >= MAX_STRING_SIZE
        break;
    end
end

% Done 

end % function



